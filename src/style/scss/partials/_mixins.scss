@use './colours';

@mixin heading($size: h2) {
    @if $size ==h1 {
        font-size: 3.25rem;
    }

    @if $size ==h2 {
        font-size: 2.125rem;
    }

    @if $size ==h3 {
        font-size: 1.5rem;
    }

    @if $size ==h4 {
        font-size: 1.375rem;
    }

    @if $size ==h5 {
        font-size: 1.25rem;
    }

    @if $size ==h6 {
        font-size: 0.9375rem;
    }
}

@mixin tiny-heading() {
    color: color-mix(in srgb, var(--primary-text) 60%, transparent);
    font-size: 0.625rem;
    margin-top: 0.5rem;
}

@mixin visually-hidden() {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

@mixin flex($justify: center, $align: center, $gap: 1rem, $direction: row) {
    display: flex;
    justify-content: $justify;
    align-items: $align;
    flex-direction: $direction;
    gap: $gap;
}

@mixin tint($target) {

    // tint to $parchment
    @if $target ==parchment {
        filter: invert(94%) sepia(14%) saturate(249%) hue-rotate(5deg) brightness(96%) contrast(96%);
    }

    // tint to $bokuto_brown
    @if $target ==bokuto_brown {
        filter: invert(73%) sepia(6%) saturate(3439%) hue-rotate(335deg) brightness(79%) contrast(83%);
    }

    // tint to $palatinate_blue
    @if $target ==palatinate_blue {
        filter: invert(27%) sepia(42%) saturate(2728%) hue-rotate(224deg) brightness(90%) contrast(103%);
    }

    // tint to $keikogi_blue_darker
    @if $target ==keikogi_blue_darker {
        filter: invert(4%) sepia(31%) saturate(1212%) hue-rotate(199deg) brightness(104%) contrast(103%);
    }

    // tint to $error
    @if $target ==error {
        filter: invert(29%) sepia(92%) saturate(5946%) hue-rotate(353deg) brightness(89%) contrast(102%);
    }

    // tint to $success
    @if $target ==success {
        filter: invert(27%) sepia(42%) saturate(2728%) hue-rotate(224deg) brightness(90%) contrast(103%);
    }
}

@mixin generateBoxShadow($hsl: colours.$keikogi_blue_hsl, $opacity: 0.34, $elevation: medium) {
    --shadow-colour: #{$hsl};
    --shadow-opacity: #{$opacity};

    @if ($elevation ==low) {
        box-shadow:
            0px 0.8px 0.9px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 1.4px 1.6px -1.2px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 3.3px 3.7px -2.5px hsl(var(--shadow-colour) / var(--shadow-opacity));
    }

    @if ($elevation ==medium) {
        box-shadow:
            0px 0.8px 0.9px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 2.7px 3px -0.8px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 6.8px 7.7px -1.7px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 16.5px 18.6px -2.5px hsl(var(--shadow-colour) / var(--shadow-opacity));
    }

    @if ($elevation ==high) {
        box-shadow:
            0px 0.8px 0.9px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 4.8px 5.4px -0.4px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 9px 10.1px -0.7px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 14.8px 16.7px -1.1px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 23.6px 26.6px -1.4px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 36.9px 41.5px -1.8px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 56.1px 63.1px -2.1px hsl(var(--shadow-colour) / var(--shadow-opacity)),
            0px 82.6px 92.9px -2.5px hsl(var(--shadow-colour) / var(--shadow-opacity));
    }
}